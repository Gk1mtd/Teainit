#!/usr/bin/env python3

#imports
import gi
gi.require_version('Gtk', '3.0')
gi.require_version('AppIndicator3', '0.1')
from gi.repository import Gtk, AppIndicator3
import subprocess

# global variable for toggle
screensaver_enabled = False
# toggle screensaver on and off
def toggle_screensaver(widget):
    global screensaver_enabled

    if screensaver_enabled:
        subprocess.run(['gsettings', 'set', 'org.cinnamon.desktop.session', 'idle-delay', '900'])
        screensaver_enabled = False
    else:
        subprocess.run(['gsettings', 'set', 'org.cinnamon.desktop.session', 'idle-delay', '0'])
        screensaver_enabled = True

# buidls menu
def build_menu():
    menu = Gtk.Menu()

    screensaver_item = Gtk.CheckMenuItem('Toggle Screensaver')
    screensaver_item.connect('activate', toggle_screensaver)
    menu.append(screensaver_item)

    quit_item = Gtk.MenuItem('Quit')
    quit_item.connect('activate', Gtk.main_quit)
    menu.append(quit_item)

    menu.show_all()
    return menu

# Saves trayicon in tmp folder
def save_image_to_file():
    image_bytecode = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x000\x00\x00\x000\x08\x06\x00\x00\x00W\x02\xf9\x87\x00\x00\x00\tpHYs\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x03\x19IDATh\x81\xedX[o\x12A\x14\xee\x8b\xb7\'\xdf,\x0b\xc4\x06\xe4\xd2\xa2\xb6F\xfd\x0fj\xb5\xd57\xff\x81\x0f^\x9a4\xed\xeeZ}h\xa3b\x1a5j\x01\x9b\xe8O\xd0\xe8\xaf0\x1a\x93&\x95\xd9\xb5\x18\x8c\x94h\xac]\x8cb\xeb\x8b\xdaF<\x07\x04\x86k\xd9af\xc1d\xbf\xe4\x84\xec\xee\xb7\x99\xf3\x9d\xdb\xce\xd0\xd3c\xc3\x86upL\xe8!\xa7B\xd2\x92\xa2\xbd\x95T}o=\x8eS\x8e\x07\x9d\xb2\x96\x90\x14\xb2\xe8\x1e_t\xb1r\x84\x00\x1c\xbf\xe3T\xb4\\\xdeT\xfdB}\x0e\xb9U\xe2\xc8\xdayV\x0ew\xb8&\xc9 D\x7f\xad\xb8\xb0C\x89\x9f\xa8\xe6`\x86@d\xb6\xc8q\xa9\xe4$\x0b\x87;\xfa\xa6\x97w\xc2b)*j\x89#\xe7\x16\xb6\xd1\x1c\xdf\xa5\xe4\x0eI&\xef\x8a\x1c\x88r24\xado7\xcb\x11\x02\xa7\xac\x8fR\x8b~\x95\xa6H\x7f-G;U\xe6h\xd9\xde\x89\xd7\x07X8B\x00N\x8f\x95\xa2\xafh\x0fEr\x84\xc0\xa9j#\xe5\xf2!?\x1c29Z\xe3\x9c\x1a?]v\x8e\xac\xb9Tm\x88\x85#\x04X\xbb\x90\xfe\xf7T\x19}p\x8f\xbf\xd8Es\n}B\xd2T\x84Sx\xcf,G\x18\xdcj\xfc ,\xbe^\x12!\x933\xd5\x1cI\x8e\x1f\xc6\x0c\x95\xb3\xa5\x8f\xb2p\x84\x01\x16~DeaL$\x87;\x1c\x8a6 \xc9\xda\xb7\xd2\xfc\x96\xc9\xf0V\x1c\x9c:,\x1c\xee\xc8\xcfo\x98\xd9\xf4w\xa0\xee\x8c\xa788\xef\xf1\x9eY\x8e\x10\xd0S\x08\xbf\x03\xb8\x97i\xce\x81\x19\xaf\xbc\xd9\xcf\xc2\x11\x02p\xfa"59f\xb7\xe2\xe0^\x87\x95#\x04\xb8\xf3\xc4\xb2\xc1\xb1\x875,\x92c\xc3F\xb7 \x18\xc9\xdc\x0cF\x8d_\xfd\xd1L\xae\x1d\xa3\x9a\xbf)\xaf\xb0\x96\x11\xe6\'\x80\x83\xf3f\x04\xfc\xb3\x9f\xdc\x04\xf0p\x9eA@\xce\x16\xd0i\x01\xb0\xbdPi\x83\xf7&\xdd\x97u\xdf\x7f#\x80\xe6\xd3g\xe7\x8e\x08\x08\xdc]\xa9p\x04\xafY\x04\xa0Y* p\xefs\xaeo&\x99\x83\xcd[\xa5#p\x8d\xf7\xf1y\x13\x01\xb3\x94uF\x80\xfbJ\xa2a$\xd1\xdcW\x13-5q\xc7\x04\xd0\x0bc\xc4}\xb7?\x162\xd2B?t\x9d\x00Ox\xb9df\x04x\xd5\x85\xdd]!\xa0\x915\xef\x01\xf2\x1c\x0e<\xbf;\xd8\x03K\xcd{\x00\x9e\x9b\x13O\xd2\xe6\x05D\x8c\xcdv\xa6\x90\'\x9c\xcayn\xd4\x9a\x17J)\xd8h\nE\x8cJ\xc7e\xb2\x04\x1f\xb3y\xfcC\xd8\xb4\x00\xd8\xcc\xad\xb4\x93\x05F\xe1\x1b\xe80\x9c\xda\xce\xee\x99"\xbd\xa6\x9d\xae\xc8@\xd4xe\xb5\x80`4\xf3\xb2-\xa7\xab\x04\\\xb7^\x801\xc3M@(f\x1c\xb2T@\xc4\xf8\x13x\xb0:\xc8M\x00\x02Ne\xcf,\x14\xf1\x98\xab\xf3\x88\x81\xfb\x19?D\xe6\xbb\x05\xa5\x93\xf5\xcf\xafz\xb9\x0b\xc8\x8b\x88e\x86\xdb\x19\xa9-\x94\xcef f\x1c\x17\xe2|\x11\x10\xa1c\x18%\xfe\x02\x8c\xf5\xe0\xdc\x97\x11\xa1\xce\x17\xe1\x9b3\xf6\xc1\x98{\x8a\xcd\xc6\xa3a\xe1\xf7\x89\xb0\xb2i\x06\x7f\xc4\x18\xc2\x11\x8b3\x1b\x1c\xf9\xd4Ry!\x07\xb8\xf8\x0ed\xf2\x1a\xf7ic\xc3\x06;\xfe\x02\x9d\xf4$\xc5\n<\xec\x9a\x00\x00\x00\x00IEND\xaeB`\x82'
    with open('/tmp/teeinit.png', 'wb') as file:
        file.write(image_bytecode)

def main():
    subprocess.run(['gsettings', 'set', 'org.cinnamon.desktop.session', 'idle-delay', '900'])
    save_image_to_file()
    indicator = AppIndicator3.Indicator.new(
        'teeinit-indicator',
        '/tmp/teeinit.png',
        AppIndicator3.IndicatorCategory.APPLICATION_STATUS
    )
    indicator.set_status(AppIndicator3.IndicatorStatus.ACTIVE)
    indicator.set_menu(build_menu())

    Gtk.main()

if __name__ == '__main__':
    main()
